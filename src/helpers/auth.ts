import {Composer, Keyboard} from "grammy";
import {MyContext} from "../index";
import {backToStart} from "./menu";
import {getUsers} from "./api";

// updated as of 06 June
const blocked = {
    "b1": [],
    "b2": [],
    "b3": [],
    "b4": [],
    "b5": [],
    "b6": [],
    "b7": [],
    "b8": [],
    "b9": [],
    "b10": [],
    "b11": [],
    "b12": [],
}

// Owners chat id
const chatId = -1001438308653;

const admins = [
    '380966964221', // 1 –¢–∞–Ω—è
    '380639111075', // 1 –ü–∞—à–∞
    '380986440039', // 1 –ê–ª—å–æ–Ω–∞
    '380503304033', // 1 üÖ®üÖîüÖ•
    '380953962888', // 2 –¢–∞–Ω—è
    '380939543331', // 3 –ù–∞—Å—Ç—è
    '380963720485', // 3 –Æ–ª—è
    '380638645550', // 3 –î—ñ–º–∞
    '380632521709', // 4 me
    '380503860369', // 4 –Ü—Ä–∞
    '380675572500', // 5 –ù–∞—Ç–∞–ª—è
    '380957447405', // 6 –∫–∞—Ç—è
    '380672207842', // 8 –°–µ—Ä–≥—ñ–π
]

const bot = new Composer<MyContext>();

export async function isAdmin(ctx: MyContext) {
    await ctx.session
    return ctx.session.contact.phone_number && admins.includes(ctx.session.contact.phone_number)
}

export async function isAuthenticated(ctx: MyContext) {
    await ctx.session
    let allow = true
    const isAuth = ctx.session.contact.phone_number && ctx.session.building && ctx.session.flat
    if (!isAuth) {
        allow = false
        await ctx.reply('–©–æ—Å—å —è –≤–∞—Å –Ω–µ –≤–ø—ñ–∑–Ω–∞—é... –ü—Ä–æ–π–¥—ñ—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –∑–∞–Ω–æ–≤–æ, –±—É–¥—å –ª–∞—Å–∫–∞ üëá', {
            reply_markup: new Keyboard().text('/auth').resized().oneTime()
        })
    }
    const isBlocked = blocked[ctx.session.building] && blocked[ctx.session.building].includes(ctx.session.flat)
    if (isBlocked) {
        allow = false
        await backToStart(ctx, '‚ùóÔ∏è–ö–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–æ–º –æ–±–º–µ–∂–µ–Ω–æ.‚ùóÔ∏è\n–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–æ—Å—Ç—ñ –ø–µ—Ä–µ–¥ –û–°–ë–ë/–ñ–ï–ö.\n–ü—ñ—Å–ª—è —Å–ø–ª–∞—Ç–∏ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–Ω–æ—Å—Ç—ñ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –∫–≤–∏—Ç–∞–Ω—Ü—ñ—é –ø—Ä–æ –æ–ø–ª–∞—Ç—É @dm_domolad –∞–±–æ @domoladbot —ñ –¥–æ—Å—Ç—É–ø –±—É–¥–µ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ —è–∫–Ω–∞–π—à–≤–∏–¥—à–µ. ')
    }
    return allow
}

/**
 * Check user in DB
 * @param ctx
 * @param contact
 */
export async function isUserInDB(ctx: MyContext, contact: InlineQueryResultContact) {
    const users = await getUsers(ctx, {phone: contact.phone_number})
    return !!users.length
}

/** Check user from Chat
 *
 * @param ctx
 * @param contact
 */
export async function isUserInChat(ctx: MyContext, contact: InlineQueryResultContact) {
    const result = await ctx.api.getChatMember(chatId, contact.user_id);
    return ["creator", "administrator", "member", "restricted"].includes(result.status);
}

bot.command("auth", async (ctx) => {
    await ctx.conversation.enter("greeting")
})

export default bot